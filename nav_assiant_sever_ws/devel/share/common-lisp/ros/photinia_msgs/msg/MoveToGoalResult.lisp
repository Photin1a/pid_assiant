; Auto-generated. Do not edit!


(cl:in-package photinia_msgs-msg)


;//! \htmlinclude MoveToGoalResult.msg.html

(cl:defclass <MoveToGoalResult> (roslisp-msg-protocol:ros-message)
  ((end_pose
    :reader end_pose
    :initarg :end_pose
    :type geometry_msgs-msg:PoseStamped
    :initform (cl:make-instance 'geometry_msgs-msg:PoseStamped))
   (brake_vel
    :reader brake_vel
    :initarg :brake_vel
    :type geometry_msgs-msg:Twist
    :initform (cl:make-instance 'geometry_msgs-msg:Twist))
   (brake_distance
    :reader brake_distance
    :initarg :brake_distance
    :type cl:float
    :initform 0.0))
)

(cl:defclass MoveToGoalResult (<MoveToGoalResult>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <MoveToGoalResult>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'MoveToGoalResult)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name photinia_msgs-msg:<MoveToGoalResult> is deprecated: use photinia_msgs-msg:MoveToGoalResult instead.")))

(cl:ensure-generic-function 'end_pose-val :lambda-list '(m))
(cl:defmethod end_pose-val ((m <MoveToGoalResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader photinia_msgs-msg:end_pose-val is deprecated.  Use photinia_msgs-msg:end_pose instead.")
  (end_pose m))

(cl:ensure-generic-function 'brake_vel-val :lambda-list '(m))
(cl:defmethod brake_vel-val ((m <MoveToGoalResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader photinia_msgs-msg:brake_vel-val is deprecated.  Use photinia_msgs-msg:brake_vel instead.")
  (brake_vel m))

(cl:ensure-generic-function 'brake_distance-val :lambda-list '(m))
(cl:defmethod brake_distance-val ((m <MoveToGoalResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader photinia_msgs-msg:brake_distance-val is deprecated.  Use photinia_msgs-msg:brake_distance instead.")
  (brake_distance m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <MoveToGoalResult>) ostream)
  "Serializes a message object of type '<MoveToGoalResult>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'end_pose) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'brake_vel) ostream)
  (cl:let ((bits (roslisp-utils:encode-double-float-bits (cl:slot-value msg 'brake_distance))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream))
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <MoveToGoalResult>) istream)
  "Deserializes a message object of type '<MoveToGoalResult>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'end_pose) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'brake_vel) istream)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:slot-value msg 'brake_distance) (roslisp-utils:decode-double-float-bits bits)))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<MoveToGoalResult>)))
  "Returns string type for a message object of type '<MoveToGoalResult>"
  "photinia_msgs/MoveToGoalResult")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'MoveToGoalResult)))
  "Returns string type for a message object of type 'MoveToGoalResult"
  "photinia_msgs/MoveToGoalResult")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<MoveToGoalResult>)))
  "Returns md5sum for a message object of type '<MoveToGoalResult>"
  "78586fd898f457ab4d343b41f256bc3e")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'MoveToGoalResult)))
  "Returns md5sum for a message object of type 'MoveToGoalResult"
  "78586fd898f457ab4d343b41f256bc3e")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<MoveToGoalResult>)))
  "Returns full string definition for message of type '<MoveToGoalResult>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# 结果~%geometry_msgs/PoseStamped end_pose~%geometry_msgs/Twist brake_vel~%float64 brake_distance~%~%================================================================================~%MSG: geometry_msgs/PoseStamped~%# A Pose with reference coordinate frame and timestamp~%Header header~%Pose pose~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: geometry_msgs/Pose~%# A representation of pose in free space, composed of position and orientation. ~%Point position~%Quaternion orientation~%~%================================================================================~%MSG: geometry_msgs/Point~%# This contains the position of a point in free space~%float64 x~%float64 y~%float64 z~%~%================================================================================~%MSG: geometry_msgs/Quaternion~%# This represents an orientation in free space in quaternion form.~%~%float64 x~%float64 y~%float64 z~%float64 w~%~%================================================================================~%MSG: geometry_msgs/Twist~%# This expresses velocity in free space broken into its linear and angular parts.~%Vector3  linear~%Vector3  angular~%~%================================================================================~%MSG: geometry_msgs/Vector3~%# This represents a vector in free space. ~%# It is only meant to represent a direction. Therefore, it does not~%# make sense to apply a translation to it (e.g., when applying a ~%# generic rigid transformation to a Vector3, tf2 will only apply the~%# rotation). If you want your data to be translatable too, use the~%# geometry_msgs/Point message instead.~%~%float64 x~%float64 y~%float64 z~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'MoveToGoalResult)))
  "Returns full string definition for message of type 'MoveToGoalResult"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# 结果~%geometry_msgs/PoseStamped end_pose~%geometry_msgs/Twist brake_vel~%float64 brake_distance~%~%================================================================================~%MSG: geometry_msgs/PoseStamped~%# A Pose with reference coordinate frame and timestamp~%Header header~%Pose pose~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: geometry_msgs/Pose~%# A representation of pose in free space, composed of position and orientation. ~%Point position~%Quaternion orientation~%~%================================================================================~%MSG: geometry_msgs/Point~%# This contains the position of a point in free space~%float64 x~%float64 y~%float64 z~%~%================================================================================~%MSG: geometry_msgs/Quaternion~%# This represents an orientation in free space in quaternion form.~%~%float64 x~%float64 y~%float64 z~%float64 w~%~%================================================================================~%MSG: geometry_msgs/Twist~%# This expresses velocity in free space broken into its linear and angular parts.~%Vector3  linear~%Vector3  angular~%~%================================================================================~%MSG: geometry_msgs/Vector3~%# This represents a vector in free space. ~%# It is only meant to represent a direction. Therefore, it does not~%# make sense to apply a translation to it (e.g., when applying a ~%# generic rigid transformation to a Vector3, tf2 will only apply the~%# rotation). If you want your data to be translatable too, use the~%# geometry_msgs/Point message instead.~%~%float64 x~%float64 y~%float64 z~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <MoveToGoalResult>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'end_pose))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'brake_vel))
     8
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <MoveToGoalResult>))
  "Converts a ROS message object to a list"
  (cl:list 'MoveToGoalResult
    (cl:cons ':end_pose (end_pose msg))
    (cl:cons ':brake_vel (brake_vel msg))
    (cl:cons ':brake_distance (brake_distance msg))
))
